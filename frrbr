 Настроим протокол OSPF на HQ-RTR средствами FRR.
 Установим FRR на HQ-RTR: apt install frr
 Для настройки внутренней динамической маршрутизации для IPv4
 используем протокол OSPFv2
 Необходимо включить соответствующий демон в конфигурации
 /etc/frr/daemons
 Пропишем
 nano /etc/frr/daemons
 Вконфигурационном файле /etc/frr/daemons необходимо активировать
 выбранный протокол для дальнейшей реализации его настройки:
 ospfd = yes
 Включаем и добавляем в автозагрузку службу FRR
 systemctl enable--now frr
 systemctl restart frr
 Переходим в интерфейс управления симуляцией FRR при помощи vtysh
 (аналог cisco)
 vtysh
 Входим в режим глобальной конфигурации
 hq-rtr.au-team.irpo# configure terminal
 Переходим в режим конфигурации OSPFv2
 hq-rtr.au-team.irpo(config)# router ospf
Указываем router-id
 hq-rtr.au-team.irpo(config)# router-id 1.1.1.1
 Переводим все интерфейсы в пассивный режим
 hq-rtr.au-team.irpo(config-router)# passive-interface default
 Объявляем локальные сети офиса HQ (сеть VLAN100 и VLAN200) и сеть
 (GRE-туннеля)
 hq-rtr.au-team.irpo(config-router)# network 192.168.100.0/26
 area 0
 hq-rtr.au-team.irpo(config-router)# network 192.168.100.64/28
 area 0
 hq-rtr.au-team.irpo(config-router)# network 10.10.0.0/30 area 0
 Настройка аутентификации для области
 area 0 authentication
 Переводим интерфейс tun1 в активный режим
 hq-rtr.au-team.irpo(config-if)# no passive-interface
 tun1tterface tun1
 Выходим из режима конфигурации OSPFv2
 hq-rtr.au-team.irpo(config-router)# exit
 Переходим в режим конфигурирования интерфейса tun1
 hq-rtr.au-team.irpo(config)# interface tun1
 Туннельный интерфейс tun1 делаем активным, для установления соседства с
 BR-RTR иобмена внутренними маршрутами
 hq-rtr.au-team.irpo(config-if)# no ip ospf network broadcast
 Настройка аутентификации с открытым паролем password
 ip ospf authentication
 ip ospf authentication-key password
 Выходим из режима конфигурации и tun1 и режима глобальной
 конфигурации
 hq-rtr.au-team.irpo(config-if)# exit
hq-rtr.au-team.irpo(config)# exit
 Сохраняем текущую конфигурацию:
 hq-rtr.au-team.irpo# write
 hq-rtr.au-team.irpo# exit
 Перезапускаем FRR:systemctl restart frr







 Настроим протокол OSPF на BR-RTR средствами FRR.
 Установим FRR на BR-RTR: apt install frr
 Для настройки внутренней динамической маршрутизации для IPv4
 используем протокол OSPFv2
 Необходимо включить соответствующий демон в конфигурации
 /etc/frr/daemons
 Пропишем
 nano /etc/frr/daemons
 Вконфигурационном файле /etc/frr/daemons необходимо активировать
 выбранный протокол для дальнейшей реализации его настройки:
 ospfd = yes
 Включаем и добавляем в автозагрузку службу FRR
 systemctl enable--now frr
 systemctl restart frr
 Переходим в интерфейс управления симуляцией FRR при помощи vtysh
 (аналог cisco)
 vtysh
 Входим в режим глобальной конфигурации
 br-rtr.au-team.irpo# configure terminal
 Переходим в режим конфигурации OSPFv2
 br-rtr.au-team.irpo(config)# router ospf
 Указываем router-id
br-rtr.au-team.irpo(config)# router-id 2.2.2.2
 Переводим все интерфейсы в пассивный режим
 br-rtr.au-team.irpo(config-router)# passive-interface default
 Объявляем локальные сети офиса BR (сеть VLAN100 и VLAN200) и сеть
 (GRE-туннеля)
 br-rtr.au-team.irpo(config-router)# network 192.168.200.0/27
 area 0
 br-rtr.au-team.irpo(config-router)# network 10.10.0.0/30 area 0
 Настройка аутентификации для области
 area 0 authentication
 Переводим интерфейс tun1 в активный режим
 br-rtr.au-team.irpo(config-if)# no passive-interface
 tun1tterface tun1
 Выходим из режима конфигурации OSPFv2
 br-rtr.au-team.irpo(config-router)# exit
 Переходим в режим конфигурирования интерфейса tun1
 br-rtr.au-team.irpo(config)# interface tun1
 Туннельный интерфейс tun1 делаем активным, для установления соседства с
 HQ-RTRиобмена внутренними маршрутами
 br-rtr.au-team.irpo(config-if)# no ip ospf network broadcast
 Настройка аутентификации с открытым паролем password
 ip ospf authentication
 ip ospf authentication-key password
 Выходим из режима конфигурации и tun1 и режима глобальной
 конфигурации
 br-rtr.au-team.irpo(config-if)# exit
 br-rtr.au-team.irpo(config)# exit
 Сохраняем текущую конфигурацию:
 br-rtr.au-team.irpo# write
br-rtr.au-team.irpo# exit
 Перезапускаем FRR:systemctl restart frr
 Можемпроверить настройки на обоих маршрутизаторах командами:
 vtysh
 show running-confi






Проверим, что все работает. Пинганем с BR-SRV HQ-SRV и после пинганем
 с BR-SRV HQ-CLI.
 ping 192.168.100.2
ping 192.168.100.66
 Всё пингуется, работает















Подготовка и установка Moodle на Debian 10 (сервер HQ-SRV)
Ниже приведена подробная инструкция по ручной установке Moodle на Debian 10 с веб-сервером Apache и СУБД MariaDB. Альтернативно даётся пример установки с помощью Docker.
1. Системные требования и обновление
Обновите систему и установите утилиты:
bash
Copy
Edit
sudo apt update && sudo apt upgrade -y
sudo apt install -y wget curl unzip
Убедитесь, что Debian 10 поставляется с MariaDB (вместо MySQL) версии 10.3 по умолчанию. Debian 10 заточен под MariaDB, она полностью совместима с Moodle.
2. Установка Apache, PHP и модулей
Установите Apache и PHP 7.3 (версия PHP 7.3 является последней из коробки для Debian 10 и подходит для Moodle 4.0 и ниже
docs.moodle.org
). Установите также модули PHP для работы с Moodle:
bash
Copy
Edit
sudo apt install -y apache2 libapache2-mod-php7.3 php7.3 php7.3-cli php7.3-common php7.3-mysql \
  php7.3-gd php7.3-intl php7.3-curl php7.3-xml php7.3-mbstring php7.3-zip php7.3-soap php7.3-ldap php7.3-xmlrpc
В установку можно добавить и другие пакеты (например php7.3-json, php7.3-sodium), но перечисленные включают все обязательные расширения: ctype, curl, gd, intl, json, mbstring, xml, zip и драйвер для MariaDB (php7.3-mysql)
docs.moodle.org
.
Настройте PHP (при необходимости в /etc/php/7.3/apache2/php.ini):
Установите memory_limit = 128M или выше (Moodle откажется устанавливаться при меньшем лимите)
docs.moodle.org
.
Убедитесь, что file_uploads = On, session.auto_start = Off (обычно по умолчанию).
Включите важные модули Apache:
bash
Copy
Edit
sudo a2enmod rewrite
sudo systemctl restart apache2
Важно: в конфигурации Apache для каталога Moodle нужно включить поддержку AcceptPathInfo (для корректной работы пути с /r.php) и разрешить директивы AllowOverride All, чтобы Moodle мог использовать .htaccess
docs.moodle.org
. Например, в файле /etc/apache2/sites-available/000-default.conf:
apache
Copy
Edit
<VirtualHost *:80>
  DocumentRoot /var/www/html/moodle
  <Directory /var/www/html/moodle>
    Options +Indexes +FollowSymLinks
    AllowOverride All
    Require all granted
    # Включаем слэш-аргументы для Moodle
    AcceptPathInfo On
  </Directory>
</VirtualHost>
После этого перезапустите Apache:
bash
Copy
Edit
sudo systemctl restart apache2
3. Установка и настройка MariaDB
Установите MariaDB и запустите скрипт безопасной настройки:
bash
Copy
Edit
sudo apt install -y mariadb-server
sudo mysql_secure_installation
Процесс mysql_secure_installation позволит задать пароль root, удалить анонимных пользователей, запретить удалённый доступ для root и удалить тестовую БД
digitalocean.com
.
Создайте базу данных и пользователя для Moodle:
Войдите в консоль MariaDB:
bash
Copy
Edit
sudo mysql -u root -p
Выполните SQL-команды (замените moodledb, moodle и P@ssw0rd на нужные, в нашем случае используются именно эти значения):
sql
Copy
Edit
CREATE DATABASE moodledb DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE USER 'moodle'@'localhost' IDENTIFIED BY 'P@ssw0rd';
GRANT ALL PRIVILEGES ON moodledb.* TO 'moodle'@'localhost';
FLUSH PRIVILEGES;
Здесь мы создаём базу moodledb с кодировкой utf8mb4 и даём пользователю moodle с паролем P@ssw0rd все привилегии на эту базу
docs.moodle.org
docs.moodle.org
. Закрываем доступ к привилегиям командой FLUSH PRIVILEGES;.
4. Загрузка и развёртывание Moodle
Перейдите в веб-каталог Apache и загрузите архив Moodle:
bash
Copy
Edit
cd /var/www/html
sudo wget https://download.moodle.org/stable400/moodle-latest-400.tgz
sudo tar -zxvf moodle-latest-400.tgz
sudo mv moodle /var/www/html/moodle
sudo rm moodle-latest-400.tgz
Здесь мы скачиваем стабильную версию Moodle 4.0 (для PHP 7.3) и распаковываем её в /var/www/html/moodle
docs.moodle.org
.
Установите права доступа:
Каталог с кодом Moodle должен быть доступен для чтения веб-сервером, но НЕ должен быть доступен для записи (чтобы предотвратить изменение файлов злоумышленниками)
docs.moodle.org
. Обычно выполняют:
bash
Copy
Edit
sudo chown -R root:root /var/www/html/moodle
sudo chmod -R 755 /var/www/html/moodle
Создайте отдельный каталог для данных Moodle вне веб-корня (например, /var/moodledata)
docs.moodle.org
. Например:
bash
Copy
Edit
sudo mkdir /var/moodledata
sudo chmod 0777 /var/moodledata
Или, чтобы ограничить доступ, можно выполнить chown www-data:www-data /var/moodledata && chmod 770, сделав владельцем веб-сервер. Главное — директория не должна находиться под /var/www/html
docs.moodle.org
docs.moodle.org
. Это необходимо ради безопасности — в ней будут храниться загруженные файлы и кэш Moodle, и они не должны быть напрямую доступны из браузера.
5. Настройка сайта Moodle через веб-интерфейс
Откройте браузер и перейдите на адрес http://HQ-SRV/ (или IP-адрес вашего сервера). Должно запуститься веб-установщик Moodle.
Выберите язык установки, примите лицензию и укажите параметры сайта:
Каталог Moodle: /var/www/html/moodle (он уже установлен).
Каталог данных Moodle: /var/moodledata.
Движок базы данных: MariaDB.
Данные для подключения к БД: имя БД moodledb, имя пользователя moodle, пароль P@ssw0rd, хост localhost.
Следуйте мастеру установки: на этапе “Очистка окружения” убедитесь, что все расширения PHP установлены и параметры (например php.ini) удовлетворяют требованиям Moodle.
При завершении установки введите данные администратора:
Логин: admin
Пароль: P@ssw0rd
Укажите дополнительную информацию (имя сайта, полное и короткое имя, адрес, отчество и т. д.). После этого установка будет завершена автоматически
docs.moodle.org
.
После успешной установки проверьте, что файлы config.php (создался в /var/www/html/moodle/config.php) и права доступа к папкам в порядке: код Moodle не доступен на запись, а каталог данных доступен на запись web-сервером.
6. Настройка главной страницы Moodle
Как только вы войдёте в систему под администратором, перейдите в «Администрирование сайта» → «Главная страница» (Front page) и отключите отображение стандартных элементов (курсов, категорий, новостей) там, где нужно. Можно оставить только блоки или контент по желанию.
Измените заголовок сайта: перейдите в «Администрирование сайта» → «Общие настройки» (General → Site settings) и установите Полное название сайта и Краткое название на «4». Это изменит отображаемое имя сайта
docs.moodle.org
.
Добавьте содержимое в центральную область: включите режим редактирования и нажмите шестерёнку (Настройки секции). Убедитесь, что включено «Включить раздел» (Include a topic section), затем введите в поле «Краткое описание страницы» (Summary) цифру 4
docs.moodle.org
. Либо добавьте HTML-блок с содержимым «4» и оставьте его заголовок пустым
docs.moodle.org
. Таким образом главная страница будет отображать только цифру 4 без других подписей.
При необходимости отключите отображение других блоков: в режиме редактирования нажмите на значок настроек каждого блока (например «Администрирование») и выберите «Скрыть» (и т. д.), чтобы на главной странице остался лишь блок (или область) с цифрой 4.
После этих настроек на главной странице Moodle будет показана только цифра «4», соответствующая номеру рабочего места, без лишних надписей.
7. Важные параметры и рекомендации
Версии ПО: Apache 2.4, MariaDB 10.3, PHP 7.3 (Debian 10) и Moodle 4.0 (stable) (PHP 7.3 поддерживает Moodle 4.0
docs.moodle.org
).
PHP-параметры: memory_limit ≥ 128M и post_max_size, upload_max_filesize (для загрузки курсовых материалов) стоит увеличить по потребности
docs.moodle.org
. Также убедитесь, что file_uploads=On и session.auto_start=Off.
Каталоги: код Moodle в /var/www/html/moodle (чтение веб-сервера, не запись), а данные Moodle в /var/moodledata (запись веб-сервера)
docs.moodle.org
.
Пользователь и БД: БД moodledb (кодировка utf8mb4) и пользователь moodle с паролем P@ssw0rd с полными правами на moodledb
docs.moodle.org
docs.moodle.org
. Эти реквизиты должны совпадать с теми, что вы ввели в веб-инсталляторе.
Cron: рекомендуется настроить системный cron для запуска admin/cli/cron.php каждую минуту (например, через crontab -e добавить * * * * * /usr/bin/php /var/www/html/moodle/admin/cli/cron.php), чтобы правильно работали фоновые задачи (удаление активностей, переписки, напоминания и пр.).
Безопасность: проверьте, чтобы доступ к /var/moodledata был ограничен (лишь для www-data или rwx для всех, как пример
docs.moodle.org
). Код Moodle не должен быть изменяем через браузер.
8. Альтернативный вариант: установка через Docker
Вместо ручной установки можно использовать готовые Docker-контейнеры для Moodle. Например, компания Bitnami предоставляет образ bitnami/moodle, в котором уже упакованы Apache, PHP и MariaDB. Порядок действий может быть таким:
Установите Docker и Docker Compose на сервере.
Создайте docker-compose.yml вроде этого (пример с отдельными сервисами):
yaml
Copy
Edit
version: '3'
services:
  db:
    image: bitnami/mariadb:10.3
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - MARIADB_DATABASE=moodledb
      - MARIADB_USER=moodle
      - MARIADB_PASSWORD=P@ssw0rd
    volumes:
      - db_data:/bitnami/mariadb
  moodle:
    image: bitnami/moodle:latest
    ports:
      - "80:80"
    environment:
      - MOODLE_DATABASE_TYPE=oci_mssql
      - MOODLE_DATABASE_HOST=db
      - MOODLE_DATABASE_PORT_NUMBER=3306
      - MOODLE_DATABASE_NAME=moodledb
      - MOODLE_DATABASE_USER=moodle
      - MOODLE_DATABASE_PASSWORD=P@ssw0rd
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - moodle_data:/bitnami/moodle
  # (можно добавить сервис phpMyAdmin, cron и т.д.)
volumes:
  db_data:
  moodle_data:
После этого запустите: docker-compose up -d. Контейнеры создадут БД и Moodle автоматически. В веб-браузере зайдите на http://HQ-SRV/ и завершите установку через веб-интерфейс (логин/пароль администратора можно задать через переменные среды или при первом запуске контейнера).
Либо использовать один контейнер Moodlе (включающий всё) командой:
bash
Copy
Edit
docker run -d --name moodle -p 80:80 bitnami/moodle:latest
(он спросит данные БД при первом запуске). Есть и другие готовые проекты (например Docker Compose-файл с отдельными контейнерами для DB, Moodle, phpMyAdmin и cron
github.com
). Использование Docker упрощает развёртывание и управление зависимостями, особенно если вы знакомы с контейнерами. Однако в задачах, где нужно строгое соблюдение конфигурации (как для тестового места HQ-SRV), может потребоваться ручная настройка параметров среды. Источники: официальная документация Moodle по установке на Debian
docs.moodle.org
docs.moodle.org
, руководство DigitalOcean по MariaDB на Debian 10
digitalocean.com
, а также руководства по PHP/Moodle
docs.moodle.org
docs.moodle.org
docs.moodle.org
 и примеры Docker-настроек
github.com
github.com
.




















root@br-rtr:/etc/frr# cat daemons



# This file tells the frr package which daemons to start.
#
# Sample configurations for these daemons can be found in
# /usr/share/doc/frr/examples/.
#
# ATTENTION:
#
# When activating a daemon for the first time, a config file, even if it is
# empty, has to be present *and* be owned by the user and group "frr", else
# the daemon will not be started by /etc/init.d/frr. The permissions should
# be u=rw,g=r,o=.
# When using "vtysh" such a config file is also needed. It should be owned by
# group "frrvty" and set to ug=rw,o= though. Check /etc/pam.d/frr, too.
#
# The watchfrr, zebra and staticd daemons are always started.
#
bgpd=no
ospfd=yes
ospf6d=no
ripd=no
ripngd=no
isisd=no
pimd=no
ldpd=no
nhrpd=no
eigrpd=no
babeld=no
sharpd=no
pbrd=no
bfdd=no
fabricd=no
vrrpd=no

#
# If this option is set the /etc/init.d/frr script automatically loads
# the config via "vtysh -b" when the servers are started.
# Check /etc/pam.d/frr if you intend to use "vtysh"!
#
vtysh_enable=yes
zebra_options="  -A 127.0.0.1 -s 90000000"
bgpd_options="   -A 127.0.0.1"
ospfd_options="  -A 127.0.0.1"
ospf6d_options=" -A ::1"
ripd_options="   -A 127.0.0.1"
ripngd_options=" -A ::1"
isisd_options="  -A 127.0.0.1"
pimd_options="   -A 127.0.0.1"
ldpd_options="   -A 127.0.0.1"
nhrpd_options="  -A 127.0.0.1"
eigrpd_options=" -A 127.0.0.1"
babeld_options=" -A 127.0.0.1"
sharpd_options=" -A 127.0.0.1"
pbrd_options="   -A 127.0.0.1"
staticd_options="-A 127.0.0.1"
bfdd_options="   -A 127.0.0.1"
fabricd_options="-A 127.0.0.1"
vrrpd_options="  -A 127.0.0.1"

# configuration profile
#
#frr_profile="traditional"
#frr_profile="datacenter"

#
# This is the maximum number of FD's that will be available.
# Upon startup this is read by the control files and ulimit
# is called.  Uncomment and use a reasonable value for your
# setup if you are expecting a large number of peers in
# say BGP.
#MAX_FDS=1024

# The list of daemons to watch is automatically generated by the init script.
#watchfrr_options=""

# To make watchfrr create/join the specified netns, use the following option:
#watchfrr_options="--netns"
# This only has an effect in /etc/frr/<somename>/daemons, and you need to
# start FRR with "/usr/lib/frr/frrinit.sh start <somename>".

# for debugging purposes, you can specify a "wrap" command to start instead
# of starting the daemon directly, e.g. to use valgrind on ospfd:
#   ospfd_wrap="/usr/bin/valgrind"
# or you can use "all_wrap" for all daemons, e.g. to use perf record:
#   all_wrap="/usr/bin/perf record --call-graph -"
# the normal daemon command is added to this at the end.

root@br-rtr:/etc/frr# cat frr.conf


frr version 7.5.1
frr defaults traditional
hostname br-rtr.au-team.irpo
log syslog informational
no ipv6 forwarding
service integrated-vtysh-config
!
interface tun1
ip ospf authentication message-digest
ip ospf message-digest-key 1 md5 Test123
!
router ospf
network 10.10.0.0/30 area 0
network 192.168.200.0/27 area 0
area 0 authentication message-digest
!
line vty
!



root@br-rtr:/etc/frr# cat frr.conf.sav


# default to using syslog. /etc/rsyslog.d/45-frr.conf places the log
# in /var/log/frr/frr.log
log syslog informational



root@br-rtr:/etc/frr# cat support_bundle_commands.conf



# FRR Support Bundle Command List
# Do Not modify the lines that start with
# PROC_NAME, CMD_LIST_START and CMD_LIST_END
# Add the new command for each process between
# CMD_LIST_START and CMD_LIST_END lines

# BGP Support Bundle Command List
PROC_NAME:bgp
CMD_LIST_START
show bgp summary
show ip bgp
show ip bgp neighbors
show ip bgp summary
show ip bgp statistics

show ip bgp update-groups advertise-queue
show ip bgp update-groups advertised-routes
show ip bgp update-groups packet-queue
show ip bgp update-groups statistics
show ip bgp peer-group
show ip bgp memory

show bgp ipv6
show bgp ipv6 neighbors
show bgp ipv6 summary
show bgp ipv6 update-groups advertise-queue
show bgp ipv6 update-groups advertised-routes
show bgp ipv6 update-groups packet-queue
show bgp ipv6 update-groups statistics
show ip bgp statistics
show bgp martian next-hop

show bgp evpn route
CMD_LIST_END

# Zebra Support Bundle Command List
PROC_NAME:zebra
CMD_LIST_START
show zebra
show zebra client summary
show ip nht vrf all
show route-map
show memory
show interface vrf all
show vrf
show zebra fpm stats
show error all
show work-queues
show debugging hashtable
show running-config
show thread cpu
show thread poll
show daemons
show version
CMD_LIST_END

# OSPF Support Bundle Command List
# PROC_NAME:ospf
# CMD_LIST_START
# CMD_LIST_END

# RIP Support Bundle Command List
# PROC_NAME:rip
# CMD_LIST_START
# CMD_LIST_END

# ISIS Support Bundle Command List
# PROC_NAME:isis
# CMD_LIST_START
# CMD_LIST_END

# BFD Support Bundle Command List
# PROC_NAME:bfd
# CMD_LIST_START
# CMD_LIST_END

# STATIC Support Bundle Command List
# PROC_NAME:static
# CMD_LIST_START
# CMD_LIST_END

# PIM Support Bundle Command List
# PROC_NAME:pim
# CMD_LIST_START
# CMD_LIST_END



root@br-rtr:/etc/frr# cat vtysh.conf


service integrated-vtysh-config

